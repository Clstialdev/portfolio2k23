/* eslint-disable @typescript-eslint/no-explicit-any */
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { useState, useRef, useEffect } from "react";
import { motion, Variants, AnimatePresence } from "framer-motion";
import Hero from "@src/components/Hero";
import SelectedWorks from "@src/components/SelectedWorks";
import About from "@src/components/About";
import Loading from "@src/components/Loading";
import dynamic from "next/dynamic";

const DynamicHero = dynamic(() => import("@src/components/Hero"), {
  loading: () => <h1>loading..</h1>,
});

const Home: NextPage = () => {
  const [loading, setLoading] = useState(true);
  const [loaded, setLoaded] = useState(false);

  useEffect(() => {
    setLoading(false);
    setTimeout(() => {
      setLoaded(true);
    }, 1000);
  }, []);

  return (
    <>
      <Head>
        <title>Fateh Hadjarsi Portfolio</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className="relative min-h-screen w-screen overflow-x-hidden bg-black "
        id="main"
      >
        <AnimatePresence mode="wait">
          {!loaded ? (
            <motion.div
              initial={{ y: -200, opacity: 0 }}
              animate={{ y: 0, opacity: 1, transition: { duration: 0.5 } }}
              exit={{ y: -200, opacity: 0, transition: { duration: 0.3 } }}
              key={"loadingboy"}
            >
              <Loading loading={loading} />
              {/* <Hero setLoaded={setLoaded} /> */}
            </motion.div>
          ) : (
            <>
              <DynamicHero />
              <SelectedWorks />
              <About />
            </>
          )}
        </AnimatePresence>
      </main>
    </>
  );
};

export default Home;
